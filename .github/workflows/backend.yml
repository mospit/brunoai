name: Backend CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: ./.venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Install project
      run: poetry install --no-interaction

    - name: Lint with Ruff
      run: poetry run ruff check .

    - name: Run Unit Tests
      run: |
        mkdir -p reports
        poetry run pytest --junitxml=reports/junit.xml --cov=bruno_ai_server --cov-report=xml --cov-report=html

    - name: Generate Coverage Badge
      uses: cicirello/coverage-badge-action@v2
      with:
        coverage-xml-file: server/coverage.xml
        coverage-badge-filename: coverage.svg
        fail-if-coverage-less-than: 60

    - name: Upload Coverage Reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports
        path: |
          server/coverage.xml
          server/htmlcov/
          server/coverage.svg

