// Mocks generated by Mockito 5.4.6 from annotations
// in client/test/mocks/voice_service_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:io' as _i6;
import 'dart:ui' as _i8;

import 'package:client/features/pantry/models/pantry_item.dart' as _i7;
import 'package:client/services/voice_service.dart' as _i2;
import 'package:flutter/services.dart' as _i10;
import 'package:flutter_tts/flutter_tts.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:speech_to_text/speech_to_text.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeVoiceCommandResult_0 extends _i1.SmartFake
    implements _i2.VoiceCommandResult {
  _FakeVoiceCommandResult_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSpeechRateValidRange_1 extends _i1.SmartFake
    implements _i3.SpeechRateValidRange {
  _FakeSpeechRateValidRange_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [VoiceService].
///
/// See the documentation for Mockito's code generation for more information.
class MockVoiceService extends _i1.Mock implements _i2.VoiceService {
  MockVoiceService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isListening =>
      (super.noSuchMethod(Invocation.getter(#isListening), returnValue: false)
          as bool);

  @override
  bool get isProcessing =>
      (super.noSuchMethod(Invocation.getter(#isProcessing), returnValue: false)
          as bool);

  @override
  bool get isSpeaking =>
      (super.noSuchMethod(Invocation.getter(#isSpeaking), returnValue: false)
          as bool);

  @override
  String get currentTranscript =>
      (super.noSuchMethod(
            Invocation.getter(#currentTranscript),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#currentTranscript),
            ),
          )
          as String);

  @override
  double get confidence =>
      (super.noSuchMethod(Invocation.getter(#confidence), returnValue: 0.0)
          as double);

  @override
  String get sessionId =>
      (super.noSuchMethod(
            Invocation.getter(#sessionId),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#sessionId),
            ),
          )
          as String);

  @override
  set onTranscriptUpdate(dynamic Function(String)? _onTranscriptUpdate) =>
      super.noSuchMethod(
        Invocation.setter(#onTranscriptUpdate, _onTranscriptUpdate),
        returnValueForMissingStub: null,
      );

  @override
  set onCommandProcessed(
    dynamic Function(_i2.VoiceCommandResult)? _onCommandProcessed,
  ) => super.noSuchMethod(
    Invocation.setter(#onCommandProcessed, _onCommandProcessed),
    returnValueForMissingStub: null,
  );

  @override
  set onError(dynamic Function(String)? _onError) => super.noSuchMethod(
    Invocation.setter(#onError, _onError),
    returnValueForMissingStub: null,
  );

  @override
  set onStatusUpdate(dynamic Function(String)? _onStatusUpdate) =>
      super.noSuchMethod(
        Invocation.setter(#onStatusUpdate, _onStatusUpdate),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<bool> requestPermissions() =>
      (super.noSuchMethod(
            Invocation.method(#requestPermissions, []),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> initializeSpeechRecognition() =>
      (super.noSuchMethod(
            Invocation.method(#initializeSpeechRecognition, []),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<void> startListening({
    String? language = 'en_US',
    Duration? duration,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#startListening, [], {
              #language: language,
              #duration: duration,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> stopListening() =>
      (super.noSuchMethod(
            Invocation.method(#stopListening, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i2.VoiceCommandResult> processAudioFile(_i6.File? audioFile) =>
      (super.noSuchMethod(
            Invocation.method(#processAudioFile, [audioFile]),
            returnValue: _i5.Future<_i2.VoiceCommandResult>.value(
              _FakeVoiceCommandResult_0(
                this,
                Invocation.method(#processAudioFile, [audioFile]),
              ),
            ),
          )
          as _i5.Future<_i2.VoiceCommandResult>);

  @override
  _i5.Future<void> speak(String? text) =>
      (super.noSuchMethod(
            Invocation.method(#speak, [text]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> stopSpeaking() =>
      (super.noSuchMethod(
            Invocation.method(#stopSpeaking, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  List<_i7.PantryItem> convertToPantryItems(
    List<_i2.PantryActionEntity>? entities,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#convertToPantryItems, [entities]),
            returnValue: <_i7.PantryItem>[],
          )
          as List<_i7.PantryItem>);

  @override
  List<String> getSupportedCommands() =>
      (super.noSuchMethod(
            Invocation.method(#getSupportedCommands, []),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  void resetSession() => super.noSuchMethod(
    Invocation.method(#resetSession, []),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i8.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [SpeechToText].
///
/// See the documentation for Mockito's code generation for more information.
class MockSpeechToText extends _i1.Mock implements _i9.SpeechToText {
  MockSpeechToText() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get hasRecognized =>
      (super.noSuchMethod(Invocation.getter(#hasRecognized), returnValue: false)
          as bool);

  @override
  String get lastRecognizedWords =>
      (super.noSuchMethod(
            Invocation.getter(#lastRecognizedWords),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#lastRecognizedWords),
            ),
          )
          as String);

  @override
  String get lastStatus =>
      (super.noSuchMethod(
            Invocation.getter(#lastStatus),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#lastStatus),
            ),
          )
          as String);

  @override
  double get lastSoundLevel =>
      (super.noSuchMethod(Invocation.getter(#lastSoundLevel), returnValue: 0.0)
          as double);

  @override
  bool get isAvailable =>
      (super.noSuchMethod(Invocation.getter(#isAvailable), returnValue: false)
          as bool);

  @override
  bool get isListening =>
      (super.noSuchMethod(Invocation.getter(#isListening), returnValue: false)
          as bool);

  @override
  bool get isNotListening =>
      (super.noSuchMethod(
            Invocation.getter(#isNotListening),
            returnValue: false,
          )
          as bool);

  @override
  bool get hasError =>
      (super.noSuchMethod(Invocation.getter(#hasError), returnValue: false)
          as bool);

  @override
  _i5.Future<bool> get hasPermission =>
      (super.noSuchMethod(
            Invocation.getter(#hasPermission),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  set errorListener(_i9.SpeechErrorListener? _errorListener) =>
      super.noSuchMethod(
        Invocation.setter(#errorListener, _errorListener),
        returnValueForMissingStub: null,
      );

  @override
  set statusListener(_i9.SpeechStatusListener? _statusListener) =>
      super.noSuchMethod(
        Invocation.setter(#statusListener, _statusListener),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<bool> initialize({
    _i9.SpeechErrorListener? onError,
    _i9.SpeechStatusListener? onStatus,
    dynamic debugLogging = false,
    Duration? finalTimeout = const Duration(milliseconds: 2000),
    List<_i9.SpeechConfigOption>? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#initialize, [], {
              #onError: onError,
              #onStatus: onStatus,
              #debugLogging: debugLogging,
              #finalTimeout: finalTimeout,
              #options: options,
            }),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<void> stop() =>
      (super.noSuchMethod(
            Invocation.method(#stop, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> cancel() =>
      (super.noSuchMethod(
            Invocation.method(#cancel, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<dynamic> listen({
    _i9.SpeechResultListener? onResult,
    Duration? listenFor,
    Duration? pauseFor,
    String? localeId,
    _i9.SpeechSoundLevelChange? onSoundLevelChange,
    dynamic cancelOnError = false,
    dynamic partialResults = true,
    dynamic onDevice = false,
    _i9.ListenMode? listenMode = _i9.ListenMode.confirmation,
    dynamic sampleRate = 0,
    _i9.SpeechListenOptions? listenOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#listen, [], {
              #onResult: onResult,
              #listenFor: listenFor,
              #pauseFor: pauseFor,
              #localeId: localeId,
              #onSoundLevelChange: onSoundLevelChange,
              #cancelOnError: cancelOnError,
              #partialResults: partialResults,
              #onDevice: onDevice,
              #listenMode: listenMode,
              #sampleRate: sampleRate,
              #listenOptions: listenOptions,
            }),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  void changePauseFor(Duration? pauseFor) => super.noSuchMethod(
    Invocation.method(#changePauseFor, [pauseFor]),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<List<_i9.LocaleName>> locales() =>
      (super.noSuchMethod(
            Invocation.method(#locales, []),
            returnValue: _i5.Future<List<_i9.LocaleName>>.value(
              <_i9.LocaleName>[],
            ),
          )
          as _i5.Future<List<_i9.LocaleName>>);

  @override
  _i5.Future<_i9.LocaleName?> systemLocale() =>
      (super.noSuchMethod(
            Invocation.method(#systemLocale, []),
            returnValue: _i5.Future<_i9.LocaleName?>.value(),
          )
          as _i5.Future<_i9.LocaleName?>);
}

/// A class which mocks [FlutterTts].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterTts extends _i1.Mock implements _i3.FlutterTts {
  MockFlutterTts() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<int?> get getMaxSpeechInputLength =>
      (super.noSuchMethod(
            Invocation.getter(#getMaxSpeechInputLength),
            returnValue: _i5.Future<int?>.value(),
          )
          as _i5.Future<int?>);

  @override
  _i5.Future<dynamic> get getLanguages =>
      (super.noSuchMethod(
            Invocation.getter(#getLanguages),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> get getEngines =>
      (super.noSuchMethod(
            Invocation.getter(#getEngines),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> get getDefaultEngine =>
      (super.noSuchMethod(
            Invocation.getter(#getDefaultEngine),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> get getDefaultVoice =>
      (super.noSuchMethod(
            Invocation.getter(#getDefaultVoice),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> get getVoices =>
      (super.noSuchMethod(
            Invocation.getter(#getVoices),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<_i3.SpeechRateValidRange> get getSpeechRateValidRange =>
      (super.noSuchMethod(
            Invocation.getter(#getSpeechRateValidRange),
            returnValue: _i5.Future<_i3.SpeechRateValidRange>.value(
              _FakeSpeechRateValidRange_1(
                this,
                Invocation.getter(#getSpeechRateValidRange),
              ),
            ),
          )
          as _i5.Future<_i3.SpeechRateValidRange>);

  @override
  set startHandler(_i8.VoidCallback? _startHandler) => super.noSuchMethod(
    Invocation.setter(#startHandler, _startHandler),
    returnValueForMissingStub: null,
  );

  @override
  set initHandler(_i8.VoidCallback? _initHandler) => super.noSuchMethod(
    Invocation.setter(#initHandler, _initHandler),
    returnValueForMissingStub: null,
  );

  @override
  set completionHandler(_i8.VoidCallback? _completionHandler) =>
      super.noSuchMethod(
        Invocation.setter(#completionHandler, _completionHandler),
        returnValueForMissingStub: null,
      );

  @override
  set pauseHandler(_i8.VoidCallback? _pauseHandler) => super.noSuchMethod(
    Invocation.setter(#pauseHandler, _pauseHandler),
    returnValueForMissingStub: null,
  );

  @override
  set continueHandler(_i8.VoidCallback? _continueHandler) => super.noSuchMethod(
    Invocation.setter(#continueHandler, _continueHandler),
    returnValueForMissingStub: null,
  );

  @override
  set cancelHandler(_i8.VoidCallback? _cancelHandler) => super.noSuchMethod(
    Invocation.setter(#cancelHandler, _cancelHandler),
    returnValueForMissingStub: null,
  );

  @override
  set progressHandler(_i3.ProgressHandler? _progressHandler) =>
      super.noSuchMethod(
        Invocation.setter(#progressHandler, _progressHandler),
        returnValueForMissingStub: null,
      );

  @override
  set errorHandler(_i3.ErrorHandler? _errorHandler) => super.noSuchMethod(
    Invocation.setter(#errorHandler, _errorHandler),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<dynamic> awaitSpeakCompletion(bool? awaitCompletion) =>
      (super.noSuchMethod(
            Invocation.method(#awaitSpeakCompletion, [awaitCompletion]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> awaitSynthCompletion(bool? awaitCompletion) =>
      (super.noSuchMethod(
            Invocation.method(#awaitSynthCompletion, [awaitCompletion]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> speak(String? text) =>
      (super.noSuchMethod(
            Invocation.method(#speak, [text]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> pause() =>
      (super.noSuchMethod(
            Invocation.method(#pause, []),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> synthesizeToFile(String? text, String? fileName) =>
      (super.noSuchMethod(
            Invocation.method(#synthesizeToFile, [text, fileName]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setLanguage(String? language) =>
      (super.noSuchMethod(
            Invocation.method(#setLanguage, [language]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setSpeechRate(double? rate) =>
      (super.noSuchMethod(
            Invocation.method(#setSpeechRate, [rate]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setVolume(double? volume) =>
      (super.noSuchMethod(
            Invocation.method(#setVolume, [volume]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setSharedInstance(bool? sharedSession) =>
      (super.noSuchMethod(
            Invocation.method(#setSharedInstance, [sharedSession]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> autoStopSharedSession(bool? autoStop) =>
      (super.noSuchMethod(
            Invocation.method(#autoStopSharedSession, [autoStop]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setIosAudioCategory(
    _i3.IosTextToSpeechAudioCategory? category,
    List<_i3.IosTextToSpeechAudioCategoryOptions>? options, [
    _i3.IosTextToSpeechAudioMode? mode =
        _i3.IosTextToSpeechAudioMode.defaultMode,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#setIosAudioCategory, [category, options, mode]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setEngine(String? engine) =>
      (super.noSuchMethod(
            Invocation.method(#setEngine, [engine]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setPitch(double? pitch) =>
      (super.noSuchMethod(
            Invocation.method(#setPitch, [pitch]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setVoice(Map<String, String>? voice) =>
      (super.noSuchMethod(
            Invocation.method(#setVoice, [voice]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> stop() =>
      (super.noSuchMethod(
            Invocation.method(#stop, []),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> isLanguageAvailable(String? language) =>
      (super.noSuchMethod(
            Invocation.method(#isLanguageAvailable, [language]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> isLanguageInstalled(String? language) =>
      (super.noSuchMethod(
            Invocation.method(#isLanguageInstalled, [language]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> areLanguagesInstalled(List<String>? languages) =>
      (super.noSuchMethod(
            Invocation.method(#areLanguagesInstalled, [languages]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setSilence(int? timems) =>
      (super.noSuchMethod(
            Invocation.method(#setSilence, [timems]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setQueueMode(int? queueMode) =>
      (super.noSuchMethod(
            Invocation.method(#setQueueMode, [queueMode]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  void setStartHandler(_i8.VoidCallback? callback) => super.noSuchMethod(
    Invocation.method(#setStartHandler, [callback]),
    returnValueForMissingStub: null,
  );

  @override
  void setInitHandler(_i8.VoidCallback? callback) => super.noSuchMethod(
    Invocation.method(#setInitHandler, [callback]),
    returnValueForMissingStub: null,
  );

  @override
  void setCompletionHandler(_i8.VoidCallback? callback) => super.noSuchMethod(
    Invocation.method(#setCompletionHandler, [callback]),
    returnValueForMissingStub: null,
  );

  @override
  void setContinueHandler(_i8.VoidCallback? callback) => super.noSuchMethod(
    Invocation.method(#setContinueHandler, [callback]),
    returnValueForMissingStub: null,
  );

  @override
  void setPauseHandler(_i8.VoidCallback? callback) => super.noSuchMethod(
    Invocation.method(#setPauseHandler, [callback]),
    returnValueForMissingStub: null,
  );

  @override
  void setCancelHandler(_i8.VoidCallback? callback) => super.noSuchMethod(
    Invocation.method(#setCancelHandler, [callback]),
    returnValueForMissingStub: null,
  );

  @override
  void setProgressHandler(_i3.ProgressHandler? callback) => super.noSuchMethod(
    Invocation.method(#setProgressHandler, [callback]),
    returnValueForMissingStub: null,
  );

  @override
  void setErrorHandler(_i3.ErrorHandler? handler) => super.noSuchMethod(
    Invocation.method(#setErrorHandler, [handler]),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<dynamic> platformCallHandler(_i10.MethodCall? call) =>
      (super.noSuchMethod(
            Invocation.method(#platformCallHandler, [call]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);
}
