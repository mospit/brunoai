import 'package:mockito/annotations.dart';

// External dependencies
import 'package:connectivity_plus/connectivity_plus.dart';
import 'package:http/http.dart' as http;
import 'package:sqflite/sqflite.dart';
import 'package:speech_to_text/speech_to_text.dart';
import 'package:flutter_tts/flutter_tts.dart';

// Internal services
import '../../lib/features/pantry/services/pantry_service.dart';
import '../../lib/services/category_service.dart';
import '../../lib/services/offline_storage_service.dart';
import '../../lib/services/sync_service.dart';
import '../../lib/services/voice_service.dart';
import '../../lib/services/product_lookup_service.dart';

/// Master mock definitions for all services and external dependencies
/// 
/// This file defines all mock classes that will be generated by build_runner
/// for comprehensive testing of Bruno AI client functionality.
/// 
/// Categories:
/// - Network: Connectivity, HTTP client
/// - Database: SQLite database and related operations
/// - Voice: Speech-to-text and text-to-speech services
/// - Pantry: Core pantry management services
/// - Storage: Local and sync services
/// - Product: Barcode and product lookup services
@GenerateMocks([
  // Network and connectivity
  Connectivity,
  http.Client,
  
  // Database
  Database,
  Batch,
  Transaction,
  
  // Voice services
  SpeechToText,
  FlutterTts,
  VoiceService,
  
  // Pantry services
  PantryService,
  CategoryService,
  
  // Storage and sync
  OfflineStorageService,
  SyncService,
  
  // Product lookup
  ProductLookupService,
])
void main() {}
